apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//kotlin注解
apply plugin: 'kotlin-kapt'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'realm-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion compileSdkVer
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.rye.catcher.zzg"
        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        versionCode 7
        versionName "1.0.7"
        multiDexEnabled true
        ndk {
            abiFilter "armeabi-v7a"
        }
    }
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }
    dataBinding {
        enabled = true
    }
    signingConfigs {
        config {
            storeFile file('../ryeCatcher.jks')
            storePassword 'catcher'
            keyAlias 'key0'
            keyPassword 'catcher'
        }
        //release{}   debug{}
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config //签名不要忘了撒
            manifestPlaceholders = ["appName": "RyeCatcherApp"] //manifest替换
            zipAlignEnabled true
        }
        debug {//默认安装的文件，可修改
            def today = new Date()
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            signingConfig signingConfigs.config
            manifestPlaceholders = ["appName": "麦田Z"]
            applicationIdSuffix '.anyOATest' //applicationIdSuffix代表了默认的应用ID
            versionNameSuffix '.' + today.format('MMdd')
            zipAlignEnabled false
        }

        preview {
            shrinkResources false //用来开启删除无用资源，也就是没有被引用的文件,和底下这个要配合使用，只有全为true两者才起作用
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            signingConfig signingConfigs.config
            manifestPlaceholders = ["appName": "RyeCatcherP"]
            applicationIdSuffix '.anyOATest'
            versionNameSuffix '.01'
            zipAlignEnabled true
            matchingFallbacks = ['debug', 'release']

        }
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }

    packagingOptions {//排除不想放入到apk文件里的文件
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions("money", "channel")
    productFlavors {
        vip {
            dimension "money"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "vip"]
            buildConfigField("boolean", "IS_VIP_VERSION", "true")
            minSdkVersion 16
        }
        free {
            dimension "money"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "free"]
            buildConfigField("boolean", "IS_VIP_VERSION", "false")
            minSdkVersion 16
        }
        baidu {
            manifestPlaceholders = [CHANNEL: "baidu"]
            dimension "channel"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
            manifestPlaceholders.put("Screen_Width_Size", "392")
            buildConfigField("boolean", "IS_baidu_VERSION", "true")
            minSdkVersion 16
        }
        xiaomi {
            manifestPlaceholders = [CHANNEL: "xiaomi"]
            dimension "channel"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
            manifestPlaceholders.put("Screen_Width_Size", "392")
            buildConfigField("boolean", "IS_baidu_VERSION", "false")
            minSdkVersion 16
        }
    }

    lintOptions {//貌似是用来屏蔽lint错误，拼写错误?
        checkReleaseBuilds false
        abortOnError false
    }

    greendao {
        schemaVersion 1
        daoPackage 'com.rye.catcher.GreenDaos.Base'
        targetGenDir 'src/main/java'
    }
}
repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }//Toasty
}
android.applicationVariants.all { variant ->

    variant.outputs.all { output ->
        if (variant.buildType.name == "debug" || variant.buildType.name == "preview") {
            resValue "string", "ip_out", "http://114.255.225.50:8088"
            resValue "string", "ip_in", "http://122.40.130.74:8088"
            resValue "string", "app_name", "寻梦测"
            resValue "string", "SCREENSHOT_ENANBLE", "1"
            buildConfigField "String", "ip", "\"www.bilibili.com\""
            if (variant.buildType.name == "preview") {
                outputFileName = "${rootProject.name}-${variant.buildType.name}" +
                        "-${variant.versionName}.apk"
                variant.packageApplication.outputDirectory = new File("./../apk")
            }

        } else {
            resValue "string", "ip_out", "https://140.206.54.50:8080"
            resValue "string", "ip_in", "http://10.248.113.15:8081"
            resValue "string", "app_name", "寻梦"
            resValue "string", "SCREENSHOT_ENANBLE", "0"
            buildConfigField "String", "ip", "\"www.bilibili.com\""
            //release 包直接保存到当前项目的outputs文件夹下
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.equals("release")) {
                variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/outputs")
                outputFileName = "${rootProject.name}-${variant.versionName}+release.apk"
            }

        }
    }

}

dependencies {
    implementation deps.multidex
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation deps.support
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation deps.appcompat
    implementation deps.cardview
    implementation deps.recyclerview
    implementation deps.constraint
    implementation deps.design
    testImplementation 'junit:junit:4.12'
    implementation files('libs/commons-io-2.4.jar')

    implementation deps.kotlin_jdk7
    //Rxjava+Retrofit+Okhttp
    implementation deps.rxjava.rx
    implementation deps.rxjava.rxandroid
    implementation deps.greendao
    implementation deps.okhttp3
    implementation deps.okhttp3_inc
    implementation deps.retrofit.core
    implementation deps.retrofit.converter
    implementation deps.retrofit.adapter

    implementation deps.glide.core
    kapt deps.glide.compiler
    implementation deps.eventbus
    implementation deps.bugly.core
    implementation deps.bugly.native
    implementation deps.butter.core
    kapt deps.butter.compiler



    implementation deps.toasty
    implementation deps.permission
    implementation deps.gson
    implementation deps.fastjson
    implementation deps.location

    implementation deps.loading

    debugImplementation deps.leak.debug
    releaseImplementation deps.leak.release
    //Optional, if you use support library fragments:
    debugImplementation deps.leak.support
    //UMeng
    implementation deps.umeng.common
    implementation deps.umeng.analytics

    // ViewModel和LiveData依赖
    implementation deps.lifecycle.core
    kapt deps.lifecycle.compiler

    //今日头条适配
    implementation deps.autosize
}
