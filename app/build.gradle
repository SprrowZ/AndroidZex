apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//kotlin注解
apply plugin: 'kotlin-kapt'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'realm-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion compileSdkVer
    buildToolsVersion buildToolsVer
    defaultConfig {
        applicationId "com.rye.catcher.zzg"
        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        versionCode 7
        versionName "1.0.7"
        multiDexEnabled true
        ndk {
            abiFilter "armeabi-v7a"
        }
    }

    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }
    dataBinding {
        enabled = true
    }
    signingConfigs {
        config {
            storeFile file('../ryeCatcher.jks')
            storePassword 'catcher'
            keyAlias 'key0'
            keyPassword 'catcher'
        }
        //release{}   debug{}
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config //签名不要忘了撒
            manifestPlaceholders = ["appName": "RyeCatcherApp"] //manifest替换
            zipAlignEnabled true
        }
        debug {//默认安装的文件，可修改
            def today = new Date()
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            signingConfig signingConfigs.config
            manifestPlaceholders = ["appName": "麦田Z"]
            applicationIdSuffix '.debug' //applicationIdSuffix代表了默认的应用ID
            versionNameSuffix '.' + today.format('MMdd')
            zipAlignEnabled false
        }
        //马甲包
        majia.initWith(buildTypes.debug)
        majia {
            manifestPlaceholders = ["appName": "Rye-Majia"]
            applicationIdSuffix '.majia'
            versionNameSuffix '.01'
            //子module打包风格
            matchingFallbacks=['majia','debug','release']
        }
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //多渠道暂时关闭
//    flavorDimensions("money", "channel")
    flavorDimensions("channel")
    productFlavors {
//        vip {
//            dimension "money"
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "vip"]
//            buildConfigField("boolean", "IS_VIP_VERSION", "true")
//            minSdkVersion 19
//        }
//        free {
//            dimension "money"
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "free"]
//            buildConfigField("boolean", "IS_VIP_VERSION", "false")
//            minSdkVersion 19
//        }

         MI{
            manifestPlaceholders = [CHANNEL: "xiaomi"]
            dimension "channel"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
            manifestPlaceholders.put("Screen_Width_Size", "392")
            buildConfigField("boolean", "IS_baidu_VERSION", "false")
            minSdkVersion MiminSdkVer
        }

    }


    greendao {
        schemaVersion 1
        daoPackage 'com.rye.catcher.GreenDaos.Base'
        targetGenDir 'src/main/java'
    }
}
repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }//Toasty
}
android.applicationVariants.all { variant ->

    variant.outputs.all { output ->
        if (variant.buildType.name == "debug"
                || variant.buildType.name == "preview") {

            resValue "string", "app_name", "寻梦测"
            resValue "string", "SCREENSHOT_ENANBLE", "1"
            buildConfigField "String", "ip", "\"www.bilibili.com\""
            if (variant.buildType.name == "preview") {
                outputFileName = "${rootProject.name}-${variant.buildType.name}" +
                        "-${variant.versionName}.apk"
                variant.packageApplication.outputDirectory = new File("./../apk")
            }

        } else {

            resValue "string", "app_name", "寻梦"
            resValue "string", "SCREENSHOT_ENANBLE", "0"
            buildConfigField "String", "ip", "\"www.bilibili.com\""
            //release 包直接保存到当前项目的outputs文件夹下
            def outputFile = output.outputFile
            println "zzg---------${outputFile.name}"
            if (outputFile != null && outputFile.name.endsWith("release.apk")) {
                println 'zzg------2'
                variant.getPackageApplication().outputDirectory = new File(rootDir.absolutePath + '/outputs/')
                outputFileName = "${rootProject.name}-${variant.versionName}-release.apk"
            }

        }
    }

}

dependencies {
    implementation deps.multidex
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation deps.support
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //组件化开发
    implementation project(':zzsdk')
    implementation project(':base')

    implementation deps.cardview
    implementation deps.recyclerview
    implementation deps.constraint
    implementation deps.design
    testImplementation 'junit:junit:4.12'
    implementation files('libs/commons-io-2.4.jar')

    implementation deps.glide.core
    kapt deps.glide.compiler

    implementation deps.bugly.core
    implementation deps.bugly.native
    implementation deps.butter.core
    kapt deps.butter.compiler


    implementation deps.toasty
    implementation deps.permission
    implementation deps.gson
    implementation deps.fastjson
    implementation deps.location

    implementation deps.loading

    debugImplementation deps.leak.debug
    majiaImplementation deps.leak.debug
    releaseImplementation deps.leak.release
    //Optional, if you use support library fragments:
    debugImplementation deps.leak.support
    //UMeng
    implementation deps.umeng.common
    implementation deps.umeng.analytics

    // ViewModel和LiveData依赖
    implementation deps.lifecycle.core
    kapt deps.lifecycle.compiler

    //今日头条适配
    implementation deps.autosize

    //kotlin 协程
    implementation deps.kotlin_coroutines
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
