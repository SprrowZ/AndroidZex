apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'org.greenrobot.greendao'
apply plugin: 'realm-android'

//自定义gradle
apply from: '../config/other.gradle'
apply from:'../config/gradlePlugin.gradle'

apply from : '../config/sign.gradle'



android {
    compileSdkVersion this.rootProject.compileSdkVer
    buildToolsVersion this.rootProject.buildToolsVer
    defaultConfig {
        applicationId "com.rye.catcher.zzg"
        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        versionCode 7
        versionName "1.0.7"
        multiDexEnabled true
        ndk {
            abiFilters  'armeabi-v7a', 'arm64-v8a',"x86"
        }
    }

    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config //签名不要忘了撒
            manifestPlaceholders = ["appName": "RyeCatcherApp"] //manifest替换
            zipAlignEnabled true
        }
        debug {//默认安装的文件，可修改
            def today = new Date()
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            signingConfig signingConfigs.config
            manifestPlaceholders = ["appName": "麦田Z"]
            applicationIdSuffix '.debug' //applicationIdSuffix代表了默认的应用ID
            versionNameSuffix '.' + today.format('MMdd')
            zipAlignEnabled false
        }
        //马甲包
        majia.initWith(buildTypes.debug)
        majia {
            manifestPlaceholders = ["appName": "Rye-Majia"]
            applicationIdSuffix '.majia'
            versionNameSuffix '.01'
            //子module打包风格
            matchingFallbacks=['majia','debug','release']
        }
    }
    sourceSets {//修改资源文件的位置
        main {
            assets.srcDirs = ['src/main/assets', 'src/main/assets/']
           // jniLibs.srcDirs=['libs']//将so文件保存在libs文件夹下
        }
    }
    sourceSets {
        main{
            res.srcDirs=['src/main/res','src/main/res-base']//新增base Module的资源文件夹f
        }
    }


    //多渠道暂时关闭
//    flavorDimensions("money", "channel")
    flavorDimensions("channel")
    productFlavors {
//        vip {
//            dimension "money"
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "vip"]
//            buildConfigField("boolean", "IS_VIP_VERSION", "true")
//            minSdkVersion 19
//        }
//        free {
//            dimension "money"
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "free"]
//            buildConfigField("boolean", "IS_VIP_VERSION", "false")
//            minSdkVersion 19
//        }

         MI{
            manifestPlaceholders = [CHANNEL: "xiaomi"]
            dimension "channel"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
            manifestPlaceholders.put("Screen_Width_Size", "392")
            buildConfigField("boolean", "IS_baidu_VERSION", "false")
            minSdkVersion MiminSdkVer
        }

    }

    greendao {
        schemaVersion 1
        daoPackage 'com.rye.catcher.GreenDaos.Base'
        targetGenDir 'src/main/java'
    }

    lintOptions {

        checkReleaseBuilds false

        abortOnError false

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
repositories {
    maven { url 'https://jitpack.io' }//Toasty
}
/**
 * application变体
 */
this.afterEvaluate {
    android.applicationVariants.all { variant ->
        println("--variantName:${variant.name}, varinantBaseName:${variant.baseName}")

        def task= variant.checkManifest
        println('-------'+task.name)

        variant.outputs.all { output ->
            if (variant.buildType.name == "debug"
                    || variant.buildType.name == "preview") {

                resValue "string", "app_name", "寻梦测"
                resValue "string", "SCREENSHOT_ENANBLE", "1"
                buildConfigField "String", "ip", "\"www.bilibili.com\""
                if (variant.buildType.name == "preview") {
                    outputFileName = "${rootProject.name}-${variant.buildType.name}" +
                            "-${variant.versionName}.apk"
                    variant.getPackageApplicationProvider().get().outputDirectory = new File("./../apk")
                }

            } else {

                resValue "string", "app_name", "寻梦"
                resValue "string", "SCREENSHOT_ENANBLE", "0"
                buildConfigField "String", "ip", "\"www.bilibili.com\""
                //release 包直接保存到当前项目的outputs文件夹下
                def outputFile = output.outputFile
                println "zzg---------${outputFile.name}"
                if (outputFile != null && outputFile.name.endsWith("release.apk")) {
                    println 'zzg------2'
                    variant.getPackageApplicationProvider().get().outputDirectory = new File(rootDir.absolutePath + '/outputs/')
                    outputFileName = "${rootProject.name}-${variant.buildType.name}-release.apk"
                }

            }
        }
    }
}


dependencies {
    implementation deps.multidex
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation deps.support

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'


    //组件化开发
    implementation project(':zzsdk')
    implementation project(':base')
    implementation project(path: ':zgstep')

    implementation deps.cardview
    implementation deps.recyclerview
    implementation deps.constraint
    implementation deps.design
    testImplementation 'junit:junit:4.12'
    implementation files('libs/commons-io-2.4.jar')

    implementation deps.glide.core
    kapt deps.glide.compiler

    implementation deps.bugly.core
    implementation deps.bugly.native
    implementation deps.butter.core
    kapt deps.butter.compiler


    implementation deps.toasty
    implementation deps.permission
    implementation deps.gson
    implementation deps.fastjson
    implementation deps.location

    implementation deps.loading
         //LeakCanery暂时屏蔽，使用BlockCanery
//    debugImplementation deps.leak.debug
//    majiaImplementation deps.leak.debug
//    releaseImplementation deps.leak.release
//    //Optional, if you use support library fragments:
//    debugImplementation deps.leak.support

    implementation deps.block.debug
//    releaseImplementation deps.block.release

//    //UMeng
//    implementation deps.umeng.common
//    implementation deps.umeng.analytics



    //今日头条适配
    implementation deps.autosize

    //kotlin 协程
    implementation deps.kotlin_coroutines
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

}
